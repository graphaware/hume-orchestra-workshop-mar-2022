version: '3.7'
services:
  neo4j:
    image: neo4j:4.4.4-enterprise
    ports:
      - "${NEO4J_HTTP_PORT:-7474}:7474"
      - "${NEO4J_BOLT_PORT:-7687}:7687"
    environment:
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD}
      - NEO4J_dbms_memory_heap_maxSize=4G
      - NEO4J_dbms_connector_bolt_advertised__address=${HUME_ADVERTISED_ADDRESS:-localhost}:${NEO4J_PORT:-7687}
      - NEO4JLABS_PLUGINS=["apoc","graph-data-science"]
    volumes:
      - "hume_neo4j_data:/data"
      - "hume_neo4j_plugins:/plugins"
  neo4j-config-cli:
    image: graphaware/neo4j-config-cli:1.3.0
    environment:
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - NEO4J_URI=bolt://neo4j:7687
      - IMPORT_PATH=/config
    volumes:
      - "./config/neo4j:/config"
  orchestra:
    image: docker.graphaware.com/public/hume-orchestra:${HUME_VERSION}
    ports:
      - 8100:8100
      - 8666:8666
    volumes:
      - ${HUME_PUBLIC_DIR:-./public}:/data
      - ./plugins/:/plugins/
  postgres:
    image: postgres:12.0
    environment:
      POSTGRES_PASSWORD: ${HUME_DB_PASSWORD:-pgsqls3cr3t}
      POSTGRES_USER: ${HUME_DB_USER:-hume}
    ports:
      - 5432:5432
    volumes:
      - "hume_postgres_data:/var/lib/postgresql/data"
  api:
    image: docker.graphaware.com/public/hume-api:${HUME_VERSION}
    ports:
      - "8080:8080"
      - "8001:8001"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${HUME_DB_USER:-hume}
      - SPRING_DATASOURCE_USERNAME=${HUME_DB_USER:-hume}
      - SPRING_DATASOURCE_PASSWORD=${HUME_DB_PASSWORD:-pgsqls3cr3t}
      - hume.orchestra.uri=http://orchestra:8100
      - hume.init.directory=/init
      - hume.init.enabled=true
      - INIT_DB_PASSWORD=password
      - com.hume.core.admin.setup.step.admin_creation.auto=true
      - com.hume.core.admin.setup.step.admin_creation.username=admin@hume.ga
      - com.hume.core.admin.setup.step.admin_creation.name=Admin User
      - com.hume.core.admin.setup.step.admin_creation.password=admin
      - hume.config-as-code.enabled=true
      - hume.config-as-code.import-dir=/init
    volumes:
      - ./config/hume:/init
    depends_on:
      - "postgres"
  web:
    image: docker.graphaware.com/public/hume-web:${HUME_VERSION}
    environment:
      - HUME_API_URL=http://localhost:8080
    ports:
      - "${HUME_FRONT_PORT:-8081}:8081"
  blobstore:
    image: docker.graphaware.com/public/hume-blobstorage:${HUME_VERSION}
    environment:
      - MINIO_ACCESS_KEY=${BLOBSTORE_ACCESS_KEY}
      - MINIO_SECRET_KEY=${BLOBSTORE_SECRET_KEY}
    volumes:
      - ${BLOBSTORE_VOLUME:-hume_blobstore_data}:/data
    command: "server /data --console-address :38991"
    ports:
      - 9000:9000
      - 38991:38991
  db:
    image: postgres:12.3-alpine
    restart: always
    environment:
        POSTGRES_PASSWORD: postgres
        POSTGRES_USER: postgres
    volumes:
        - dbdata:/var/lib/postgresql/data
    ports:
    - 15432:5432
  rabbit:
    image: "rabbitmq:3-management"
    ports:
      - '15672:15672'
      - '5672:5672'
    environment:
      - RABBITMQ_DEFAULT_USER=hume
      - RABBITMQ_DEFAULT_PASS=hume!rabbit2022
volumes:
  hume_postgres_data:
  hume_neo4j_data:
  hume_neo4j_plugins:
  hume_blobstore_data:
  dbdata:
  pgadmin:
